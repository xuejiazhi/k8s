kind: Namespace
apiVersion: v1
metadata:
  name: jeeok
  labels:
    name: jeeok-v1

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pg-config
  namespace: jeeok
data:
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: bibt123456


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hasuara-config
  namespace: jeeok
data:
  HASURA_GRAPHQL_DATABASE_URL: "postgres://postgres:bibt123456@localhost:5432/postgres"
  HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
  HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
  HASURA_GRAPHQL_ADMIN_SECRET: "bibt@123456"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ct-hasuara
  namespace: jeeok
  labels:
    name: ct-hasuara
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ct-hasuara
  template:
    metadata:
      labels:
        app: ct-hasuara
    spec:
      containers:
      - name: postgres
        image: postgres:13.3-alpine
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
        ports:
          - name: tcp5432
            protocol: TCP
            containerPort: 5432
            hostPort: 5432
        envFrom:
          - configMapRef:
              name: pg-config
        volumeMounts:
          - name: pgdatadir
            mountPath: /var/lib/postgresql/data
      ## hasuara
      - name: hasuara
        image: hasura/graphql-engine
        imagePullPolicy: IfNotPresent
        ports:
          - name: tcp8080
            protocol: TCP
            containerPort: 8080
            hostPort: 8080
        envFrom:
          - configMapRef:
              name: hasuara-config


      volumes:
        - name: pgdatadir
          hostPath:
            path: /var/lib/postgresql/data
---
apiVersion: v1
kind: Service
metadata:
  name: hasuara-svc
  namespace: jeeok
spec:
  type: NodePort
  selector:
    app: ct-hasuara
  ports:
    - name: tcp5432
      protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 30008
    - name: tcp8080
      protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30009
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hasuara-ingress
  namespace: jeeok
  annotations:
       kubernetes.io/ingress.class: "nginx"  
spec:
  rules:
  - host: bibt.hasuara.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ct-hasuara
            port:
              number: 8080
